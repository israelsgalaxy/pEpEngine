include:
  - '.gitlab-ci-files/common-prepare.yml'

variables:
  DEBIAN_FRONTEND: "noninteractive"

.check_deps: &check_deps
    - docker login -u ${DOCKER_REGISTRY_USER} -p ${DOCKER_REGISTRY_PASS} ${DOCKER_REGISTRY_HOST}
    - echo "Checking if ${DOCKER_REGISTRY_HOST}/pep-${CI_DISTRO_TARGET}-engine-deps:${CI_COMMIT_REF_SLUG} exists..."
    - |
      case $(docker manifest inspect ${DOCKER_REGISTRY_HOST}/pep-${CI_DISTRO_TARGET}-engine-deps:${CI_COMMIT_REF_SLUG} > /dev/null ; echo $?) in
      	0)
      		echo "Image already exists"
                exit 0
      		;;
      	1)
      		echo "Image doesn't exist... will proceed to build"
      		export MAKE_TARGET="deps"
      		;;
      esac

stages:
  - check
  - deps
  - build
  - test
  - build-docker
  - packages


# Debian 10

debian10:deps_check:
  extends: .make_in_docker
  stage: check
  before_script:
    - *check_deps
  variables:
    CI_DISTRO_TARGET: "debian10"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/debian10/deps.pEpEngine.debian10.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh
      when: never
    - when: always

debian10:deps:
  extends: .make_in_docker
  stage: deps
  variables:
    MAKE_TARGET: "deps"
    CI_DISTRO_TARGET: "debian10"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/debian10/deps.pEpEngine.debian10.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh

debian10:build:
  tags:
    - linux
  stage: build
  image: ${DOCKER_REGISTRY_HOST}/pep-debian10-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "build"
    CI_DISTRO_TARGET: "debian10"

debian10:test:
  tags:
    - linux
  stage: test
  needs: ["debian10:build"]
  image: ${DOCKER_REGISTRY_HOST}/pep-debian10-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "test"
    CI_DISTRO_TARGET: "debian10"

debian10:build-docker:
  extends: .make_in_docker
  stage: build-docker
  needs: ["debian10:test"]
  variables:
    MAKE_TARGET: "build-docker"
    CI_DISTRO_TARGET: "debian10"
  rules:
    - if: '$CI_COMMIT_TAG  =~ /^Release_[0-9]+\.[0-9]+\.[0-9]+$/'

# Debian 11

debian11:deps_check:
  extends: .make_in_docker
  stage: check
  before_script:
    - *check_deps
  variables:
    CI_DISTRO_TARGET: "debian11"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/debian11/deps.pEpEngine.debian11.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh
      when: never
    - when: always

debian11:deps:
  extends: .make_in_docker
  stage: deps
  variables:
    MAKE_TARGET: "deps"
    CI_DISTRO_TARGET: "debian11"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/debian11/deps.pEpEngine.debian11.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh

debian11:build:
  tags:
    - linux
  stage: build
  image: ${DOCKER_REGISTRY_HOST}/pep-debian11-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "build"
    CI_DISTRO_TARGET: "debian11"

debian11:test:
  tags:
    - linux
  stage: test
  needs: ["debian11:build"]
  image: ${DOCKER_REGISTRY_HOST}/pep-debian11-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "test"
    CI_DISTRO_TARGET: "debian11"

debian11:build-docker:
  extends: .make_in_docker
  stage: build-docker
  needs: ["debian11:test"]
  variables:
    MAKE_TARGET: "build-docker"
    CI_DISTRO_TARGET: "debian11"
  rules:
    - if: '$CI_COMMIT_TAG  =~ /^Release_[0-9]+\.[0-9]+\.[0-9]+$/'

# CentOS

centos8:deps_check:
  extends: .make_in_docker
  stage: check
  before_script:
    - *check_deps
  variables:
    CI_DISTRO_TARGET: "centos8"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/centos8/deps.pEpEngine.centos8.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh
      when: never
    - when: always

centos8:deps:
  extends: .make_in_docker
  stage: deps
  variables:
    MAKE_TARGET: "deps"
    CI_DISTRO_TARGET: "centos8"
  rules:
    - changes:
        - DEPENDENCIES
        - scripts/centos8/deps.pEpEngine.centos8.Dockerfile
        - scripts/common/build_pEpEngine_deps.sh

centos8:build:
  tags:
    - linux
  stage: build
  image: ${DOCKER_REGISTRY_HOST}/pep-centos8-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "build"
    CI_DISTRO_TARGET: "centos8"

centos8:test:
  tags:
    - linux
  stage: test
  needs: ["centos8:build"]
  image: ${DOCKER_REGISTRY_HOST}/pep-centos8-engine-deps:${CI_COMMIT_REF_SLUG}
  script:
    - cd scripts/${CI_DISTRO_TARGET}
    - make ${MAKE_TARGET}
  variables:
    MAKE_TARGET: "test"
    CI_DISTRO_TARGET: "centos8"

centos8:build-docker:
  extends: .make_in_docker
  stage: build-docker
  needs: ["centos8:test"]
  variables:
    MAKE_TARGET: "build-docker"
    CI_DISTRO_TARGET: "centos8"
  rules:
    - if: '$CI_COMMIT_TAG  =~ /^Release_[0-9]+\.[0-9]+\.[0-9]+$/'

centos8:rpm:build:
  extends: .upload_pkg
  stage: packages
  needs: ["centos8:build-docker"]
  variables:
    MAKE_TARGET: "rpm"
    CI_DISTRO_TARGET: "centos8"
  rules:
    - if: '$CI_COMMIT_TAG  =~ /^Release_[0-9]+\.[0-9]+\.[0-9]+$/'
