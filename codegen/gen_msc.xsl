<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" xmlns:math="http://exslt.org/math" xmlns:func="http://exslt.org/functions" xmlns:str="http://exslt.org/strings" xmlns:dyn="http://exslt.org/dynamic" xmlns:set="http://exslt.org/sets" xmlns:sets="http://exslt.org/sets" xmlns:date="http://exslt.org/dates-and-times" xmlns:yml="http://fdik.org/yml" extension-element-prefixes="exsl func str dyn set sets math date yml"><xsl:output method="text"/><xsl:variable name="space" select="'                                                                                                                                                                                                        '"/><xsl:param name="autoindent" select="4"/><xsl:template match="text()"/><xsl:variable name="maxdepth" select="7"/><xsl:variable name="mindepth" select="3"/><xsl:template match="/protocol/fsm[1]"><xsl:param name="_indent" select="0"/><xsl:variable name="msc"><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  # The entities
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  ua [label="Alice\nUser"], a [label="Alice\nDevice"], b [label="Bob\nDevice"], ub [label="Bob\nUser"];
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  # Small gap before the boxes
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  |||;
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  # Next two on same line due to ','
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  a box a [label="Sole"],
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  b box b [label="Sole"];
</xsl:text></xsl:variable><xsl:apply-templates select="/protocol/fsm[1]/state[@name='Sole']/event[@name='Beacon']"><xsl:with-param name="_indent" select="$_indent + (1) * $autoindent"/><xsl:with-param name="commPartnerState" select="'HandshakingGrouped'"/><xsl:with-param name="whoAmI" select="'a'"/><xsl:with-param name="commPartner" select="'b'"/><xsl:with-param name="depth" select="0"/><xsl:with-param name="msc" select="$msc"/></xsl:apply-templates></xsl:template><xsl:template match="protocol/fsm[1]/*/event"><xsl:param name="_indent" select="0"/><xsl:param name="commPartnerState"/><xsl:param name="whoAmI"/><xsl:param name="commPartner"/><xsl:param name="msc"/><xsl:param name="depth"/><xsl:for-each select="child::condition"><xsl:call-template name="nextStep"><xsl:with-param name="commPartnerState" select="$commPartnerState"/><xsl:with-param name="whoAmI" select="$whoAmI"/><xsl:with-param name="commPartner" select="$commPartner"/><xsl:with-param name="msc" select="$msc"/><xsl:with-param name="depth" select="$depth"/></xsl:call-template></xsl:for-each><xsl:call-template name="nextStep"><xsl:with-param name="commPartnerState" select="$commPartnerState"/><xsl:with-param name="whoAmI" select="$whoAmI"/><xsl:with-param name="commPartner" select="$commPartner"/><xsl:with-param name="msc" select="$msc"/><xsl:with-param name="depth" select="$depth"/></xsl:call-template></xsl:template><xsl:template name="nextStep"><xsl:param name="_indent" select="0"/><xsl:param name="commPartnerState"/><xsl:param name="whoAmI"/><xsl:param name="commPartner"/><xsl:param name="msc"/><xsl:param name="depth"/><xsl:variable name="event" select="@name"/><xsl:variable name="ownState" select="parent::state/@name"/><xsl:variable name="eventString"><xsl:if test="/protocol/fsm[1]"><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>u</xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> -&gt; </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> [label="</xsl:text><xsl:value-of select="$event"/><xsl:text>"];
</xsl:text></xsl:if></xsl:variable><xsl:variable name="message" select="child::send[1]/@name"/><xsl:variable name="condition" select="parent::condition/@name"/><xsl:variable name="target" select="child::transition[1]/@target"/><xsl:variable name="stopCondition" select="(parent::state/@timeout='off' and $depth&gt;$mindepth) or $depth&gt;$maxdepth"/><xsl:choose><xsl:when test="$stopCondition"><xsl:variable name="id" select="generate-id()"/><exsl:document method="text" href="msc/{$id}.msc"><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>msc {
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>   </xsl:text><xsl:value-of select="$msc"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>}
</xsl:text></exsl:document></xsl:when><xsl:when test="$message and $target=$ownState and $depth&lt;$maxdepth"><xsl:variable name="newmsc"><xsl:value-of select="$msc"/><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$eventString"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> -&gt; </xsl:text><xsl:value-of select="$commPartner"/><xsl:text> [label="</xsl:text><xsl:value-of select="$message"/><xsl:text>"];
</xsl:text></xsl:variable><xsl:apply-templates select="/protocol/fsm[1]/state[@name=$commPartnerState]/event[@name=$message]"><xsl:with-param name="_indent" select="$_indent + (1) * $autoindent"/><xsl:with-param name="commPartnerState" select="$ownState"/><xsl:with-param name="whoAmI" select="$commPartner"/><xsl:with-param name="commPartner" select="$whoAmI"/><xsl:with-param name="depth" select="$depth+1"/><xsl:with-param name="msc" select="$newmsc"/></xsl:apply-templates></xsl:when><xsl:when test="$message and not($target=$ownState)"><xsl:variable name="newmsc"><xsl:value-of select="$msc"/><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$eventString"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> -&gt; </xsl:text><xsl:value-of select="$commPartner"/><xsl:text> [label="</xsl:text><xsl:value-of select="$message"/><xsl:text>"];
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> box </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text>     [label="</xsl:text><xsl:value-of select="$target"/><xsl:text>"];
</xsl:text></xsl:variable><xsl:apply-templates select="/protocol/fsm[1]/state[@name=$commPartnerState]/event[@name=$message]"><xsl:with-param name="_indent" select="$_indent + (1) * $autoindent"/><xsl:with-param name="commPartnerState" select="$target"/><xsl:with-param name="whoAmI" select="$commPartner"/><xsl:with-param name="commPartner" select="$whoAmI"/><xsl:with-param name="depth" select="$depth+1"/><xsl:with-param name="msc" select="$newmsc"/></xsl:apply-templates></xsl:when><xsl:when test="not($message or $target=$ownState)"><xsl:variable name="newmsc"><xsl:value-of select="$msc"/><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$eventString"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>  </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> box </xsl:text><xsl:value-of select="$whoAmI"/><xsl:text> [label="</xsl:text><xsl:value-of select="$target"/><xsl:text>"];
</xsl:text></xsl:variable><xsl:apply-templates select="/protocol/fsm[1]/state[@name=$target]/event"><xsl:with-param name="_indent" select="$_indent + (1) * $autoindent"/><xsl:with-param name="commPartnerState" select="$commPartnerState"/><xsl:with-param name="whoAmI" select="$whoAmI"/><xsl:with-param name="commPartner" select="$commPartner"/><xsl:with-param name="depth" select="$depth+1"/><xsl:with-param name="msc" select="$newmsc"/></xsl:apply-templates></xsl:when><xsl:otherwise><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>msc {
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>   </xsl:text><xsl:value-of select="$msc"/><xsl:text>
</xsl:text><xsl:value-of select="substring($space, 1, $_indent+0*$autoindent)"/><xsl:text>}
</xsl:text></xsl:otherwise></xsl:choose></xsl:template></xsl:stylesheet>
